{"ast":null,"code":"var _jsxFileName = \"/home/eadorable/code/eadorable/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n  const handleClick = index => {\n    if (board[index] || calculateWinner(board)) {\n      return;\n    }\n    const newBoard = board.slice();\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n  };\n  const calculateWinner = squares => {\n    // Check for a winner and return 'X', 'O', or null\n    // Implement your winning logic here (rows, columns, diagonals)\n  };\n  const winner = calculateWinner(board);\n  const status = winner ? `Winner: ${winner}` : `Next player: ${isXNext ? 'X' : 'O'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((value, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(index),\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YEYSqvL6fOShla2jZSP//3y9U3U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","isXNext","setIsXNext","handleClick","index","calculateWinner","newBoard","slice","squares","winner","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","value","onClick","_c","$RefreshReg$"],"sources":["/home/eadorable/code/eadorable/tic-tac-toe/src/App.js"],"sourcesContent":["import './App.css';\n\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [isXNext, setIsXNext] = useState(true);\n\n  const handleClick = (index) => {\n    if (board[index] || calculateWinner(board)) {\n      return;\n    }\n\n    const newBoard = board.slice();\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setIsXNext(!isXNext);\n  };\n\n  const calculateWinner = (squares) => {\n    // Check for a winner and return 'X', 'O', or null\n    // Implement your winning logic here (rows, columns, diagonals)\n  };\n\n  const winner = calculateWinner(board);\n  const status = winner ? `Winner: ${winner}` : `Next player: ${isXNext ? 'X' : 'O'}`;\n\n  return (\n    <div>\n      <div>{status}</div>\n      <div className=\"board\">\n        {board.map((value, index) => (\n          <button key={index} onClick={() => handleClick(index)}>\n            {value}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAElB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIP,KAAK,CAACO,KAAK,CAAC,IAAIC,eAAe,CAACR,KAAK,CAAC,EAAE;MAC1C;IACF;IAEA,MAAMS,QAAQ,GAAGT,KAAK,CAACU,KAAK,CAAC,CAAC;IAC9BD,QAAQ,CAACF,KAAK,CAAC,GAAGH,OAAO,GAAG,GAAG,GAAG,GAAG;IACrCH,QAAQ,CAACQ,QAAQ,CAAC;IAClBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMI,eAAe,GAAIG,OAAO,IAAK;IACnC;IACA;EAAA,CACD;EAED,MAAMC,MAAM,GAAGJ,eAAe,CAACR,KAAK,CAAC;EACrC,MAAMa,MAAM,GAAGD,MAAM,GAAI,WAAUA,MAAO,EAAC,GAAI,gBAAeR,OAAO,GAAG,GAAG,GAAG,GAAI,EAAC;EAEnF,oBACEP,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAMD;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnBrB,OAAA;MAAKsB,SAAS,EAAC,OAAO;MAAAL,QAAA,EACnBd,KAAK,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEd,KAAK,kBACtBV,OAAA;QAAoByB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACC,KAAK,CAAE;QAAAO,QAAA,EACnDO;MAAK,GADKd,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAnCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}